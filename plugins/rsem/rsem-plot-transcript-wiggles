#!/usr/bin/perl

use Getopt::Long;
use Pod::Usage;
use File::Basename;
use strict;

my $gene_list = 0; # default is 0, means input is a transcript list; 1 means input is a gene list
my $show_unique = 0; # 0, default value, means do not show unique transcript wiggles; 1 means show unique transcript wiggles
my $help = 0;

GetOptions("gene-list" => \$gene_list,
	   "show-unique" => \$show_unique,
	   "h|help" => \$help) or pod2usage(-exitval => 2, -verbose => 2);

pod2usage(-verbose => 2) if ($help == 1);
pod2usage(-msg => "Invalid number of arguments!", -exitval => 2, -verbose => 2) if (scalar(@ARGV) != 3);

my ($fn, $dir, $suf) = fileparse($0);
my $command = "";

unless (-e "$ARGV[0].transcript.sorted.bam") {
    $command = $dir."sam/samtools sort $ARGV[0].transcript.bam $ARGV[0].transcript.sorted";
    &runCommand($command);
}
unless (-e "$ARGV[0].transcript.readdepth") {
    $command = $dir."rsem-bam2readdepth $ARGV[0].transcript.sorted.bam $ARGV[0].transcript.readdepth";
    &runCommand($command);
}

if ($show_unique) {
    unless (-e "$ARGV[0].uniq.transcript.bam") {
	$command = $dir."rsem-get-unique $ARGV[0].transcript.bam $ARGV[0].uniq.transcript.bam";
	&runCommand($command);
    }
    unless (-e "$ARGV[0].uniq.transcript.sorted.bam") {
	$command = $dir."sam/samtools sort $ARGV[0].uniq.transcript.bam $ARGV[0].uniq.transcript.sorted";
	&runCommand($command);
    }
    unless (-e "$ARGV[0].uniq.transcript.readdepth") {
	$command = $dir."rsem-bam2readdepth $ARGV[0].uniq.transcript.sorted.bam $ARGV[0].uniq.transcript.readdepth";
	&runCommand($command);
    }
}

$command = $dir."rsem-gen-transcript-plots $ARGV[0] $ARGV[1] $gene_list $show_unique $ARGV[2]";
&runCommand($command);


# command, {err_msg}
sub runCommand {
    print $_[0]."\n";
    my $status = system($_[0]);
    if ($status != 0) { 
	my $errmsg;
	if (scalar(@_) > 1) { $errmsg = $_[1]; }
	else { $errmsg = "\"$command\" failed! Please check if you provide correct parameters/options for the pipeline!"; }
	print $errmsg."\n";
	exit(-1);
    }
    print "\n";
}

__END__

=head1 NAME

rsem-plot-transcript-wiggles

=head1 SYNOPSIS

=over

 rsem-plot-transcript-wiggles [options] sample_name input_list output_plot_file

=back

=head1 ARGUMENTS

=over

=item B<sample_name>

The name of the sample analyzed.

=item B<input_list>

A list of transcript ids or gene ids. But it cannot be a mixture of transcript & gene ids. Each id occupies one line without extra spaces.

=item B<output_plot_file>

The file name of the pdf file which contains all plots.

=back

=head1 OPTIONS

=over

=item B<--gene-list>

The input-list is a list of gene ids. (Default: off)

=item B<--show-unique>

Show the wiggle plots as stacked bar plots. See description section for details. (Default: off)

=item B<-h/--help>

Show help information.

=back

=head1 DESCRIPTION

This program generates transcript wiggle plots and outputs them in a pdf file. This program can accept either a list of transcript ids or gene ids (if transcript to gene mapping information is provided) and has two modes of showing wiggle plots. If '--show-unique' is not specified, the wiggle plot for each transcript is a histogram where each position has the expected read depth at this position as its height. If '--show-unique' is specified, for each transcript a stacked bar plot is generated. For each position, the read depth of unique reads, which have only one alignment, is showed in black. The read depth of multi-reads, which align to more than one places, is showed in red on top of the read depth of unique reads.This program will use some files RSEM generated previouslly. So please do not delete/move any file 'rsem-calculate-expression' generated.

=head1 OUTPUT

=over

=item B<output_plot_file>

This is a pdf file containing all plots generated. If a list of transcript ids is provided, each page display at most 6 plots in 3 rows and 2 columns. If gene ids are provided, each page display a gene. The gene's id is showed at the top and all its transcripts' wiggle plots are showed in this page. The arrangment of plots is determined automatically. For each transcript wiggle plot, the transcript id is displayed as title. x-axis is position in the transcript and y-axis is read depth. 

=item B<sample_name.transcript.sorted.bam and sample_name.transcript.readdepth>

If these files do not exist, 'rsem-plot-transcript-wiggles' will automatically generate them.

=item B<sample_name.uniq.transcript.bam, sample_name.uniq.transcript.sorted.bam and sample_name.uniq.transcript.readdepth>

If '--show-unique' option is specified and these files do not exist, 'rsem-plot-transcript-wiggles' will automatically generate them. 

=back

=head1 EXAMPLES

Suppose sample_name and output_plot_file are set to 'mmliver_single_quals' and 'output.pdf' respectively. input_list is set to 'transcript_ids.txt' if transcript ids are provided, and is set to 'gene_ids.txt' if gene ids are provided.

1) Transcript ids are provided and we just want normal wiggle plots:

 rsem-plot-transcript-wiggles mmliver_single_quals transcript_ids.txt output.pdf

2) Gene ids are provided and we want to show stacked bar plots:

 rsem-plot-transcript-wiggles --gene-list --show-unique mmliver_single_quals gene_ids.txt output.pdf 

=cut
